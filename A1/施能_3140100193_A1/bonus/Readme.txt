通过openGL实现椭圆的的生成，算法基本与非bonus程序相同，不同之处在于引入了一些库函数实现了屏幕输出。

 中点椭圆算法的步骤（基本同非bonus）
 1、输入Rx，Ry和椭圆中心，得到椭圆（中心在原点）上的第一个点：
 	（x0,y0）=(0,Ry)
 2、计第一个区域中决策函数的初始值
 		p = Round(Ry2 - (Rx2*Ry) + (0.25*Rx2))
 3、在区域1总的每个Xk位置，从k=0，开始完成下列测试：假如p1k<0,沿中心在（0,0）的椭圆的下一个点为（xk +1，yk），并且
 	p1k+1=p1k + 2*Ry^2*xk+1 +Ry^2
 否则，沿椭圆的下个点为（xk +1，yk -1），并且
 	p1k+1=p1k + 2*Ry^2*xk+1 - 2*Rx^2*yk+1 +Ry^2
 其中
 	2*Ry^2*xk+1 = 2*Ry^2*xk + 2*Ry^2
 	2*Rx^2*yk+1 = 2*Rx^2*yk - 2*Rx^2
 并且直到
 	2*Ry^2*x ≥ 2*Rx^2*y
 4、使用区域计算的最后点（x，y）计算区域2中参数的初始值：
 	p = Round(Ry2*(x + 0.5)*(x + 0.5) + Rx2*(y - 1)*(y - 1) - Rx2 * Ry2);
 5、使用类似的判别方法绘制区域2中的点，直到y=0
 6、确定其他三个象限中的对称点
 7、将计算出的每个像素位置移到中心在（xc,yc）的椭圆轨迹上，并按坐标值绘制点
 	x=x + xc，y=y + yc